# Generated by Django 4.0.6 on 2022-07-18 20:13

import cloudinary.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.CharField(max_length=250)),
                ('address', models.CharField(max_length=60)),
                ('profile_photo', cloudinary.models.CloudinaryField(max_length=255, verbose_name='Profile photo')),
                ('mobile_no', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('status', models.CharField(choices=[('ac', 'active'), ('aw', 'away')], max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=300)),
                ('snap', cloudinary.models.CloudinaryField(max_length=255, verbose_name='Menu photo')),
                ('status', models.CharField(choices=[('ck', 'cooking'), ('ar', 'awaiting request'), ('av', 'available')], max_length=60)),
                ('cook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ingredients', models.ManyToManyField(to='tam.ingredient')),
            ],
        ),
    ]
